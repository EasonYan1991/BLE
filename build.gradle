import depend.GoogleDependencies
import depend.KotlinDependencies
import depend.ktLinterDependencies
import depend.ThirdPartyDependencies

buildscript {
}

//def version = '7.4.2'
// Top-level build file where you can add configuration options common to all sub-projects/modules.
plugins {
    id 'com.android.application' version '8.0.0' apply false
    id 'com.android.library' version '8.0.0' apply false
    id 'org.jetbrains.kotlin.android' version '1.8.20' apply false

    id "org.jetbrains.kotlin.jvm" version '1.8.20' apply false
    // hilt
    id 'com.google.dagger.hilt.android' version '2.45' apply false
    // Kotlin lint
    // https://github.com/jeremymailen/kotlinter-gradle
    id "org.jmailen.kotlinter" version '3.14.0' apply false
    // https://github.com/ben-manes/gradle-versions-plugin
    // discover the version to update
    // gradle dependencyUpdates -Drevision=release
    id "com.github.ben-manes.versions" version '0.46.0' apply false
}

apply from: "$rootDir/dependencies.gradle"
configurations.all {
    resolutionStrategy {
        eachPlugin { details ->
            def id = requested.id.id
            if (id == 'com.android.application') {
                details.useVersion(GradleDependencies.version)
//                details.useModule("config you module")
            } else if (id == 'com.android.library') {
                details.useVersion(GradleDependencies.version)
            } else if (id == "org.jetbrains.kotlin.android") {
                details.useVersion(KotlinDependencies.kotlinVersion)
            } else if (id == "org.jetbrains.kotlin.jvm") {
                details.useVersion(KotlinDependencies.kotlinVersion)
            } else if (id == "com.google.dagger.hilt.android") {
                details.useVersion(GoogleDependencies.hiltVersion)
            } else if (id == "org.jmailen.kotlinter") {
                details.useVersion(ktLinterDependencies.ktLinterVersion)
            } else if (id == "com.github.ben-manes.versions") {
                details.useVersion(ThirdPartyDependencies.benManesVersions)
            }
        }
    }
}
//    resolutionStrategy.eachDependency { details ->
//        if (details.requested.group == 'org.jetbrains.kotlin:kotlin-script-runtime') {
//            details.useVersion "1.8.0"
//        }
//    }
task clean(type: Delete) {
    delete rootProject.buildDir
}